@model Exam_system.UI.ViewModels.ExamQuestionAnswersViewModel
@{
    ViewBag.Title = Model.Exam.Name;
    var counter = 1;
}

<nav onmouseover="show(event)" onmouseout="hide(event)" style="background: #fff;padding: 10px;border-radius: 10px;box-shadow: 0 3px 5px #ddd;position: fixed;width: 84.5%;opacity: 0.6;top: 50px;display: flex;justify-content: space-around;">    

    <h2>@Model.Exam.Name</h2>

    <h2 class="timer">
        <span id="hours">0</span> :
        <span id="mins">0</span> :
        <span id="secs">0</span>       
    </h2>
</nav>

<form method="Post" action="/Subject/FinishExam">
    @foreach (var question in Model.QuestionWithAnswers)
    {
        <div class="jumbotron" style="margin-top: 100px;">
            <h3>@(counter++) - @question.Key.Header</h3>
            <div class="form-group">
                @foreach (var answer in question.Value)
                {
                    <div style="font-size: 25px">
                        <input onclick="saveAnswer(event)" type="radio" value="@answer.Id" name="@question.Key.Id" />
                        <span>@answer.Content</span>
                    </div>
                }
            </div>

        </div>
    }

    <button onclick="sendAnswers(event)" type="submit" class="btn btn-default btn-lg">Finish Exam</button>
</form>


@section examingScript{
    <script>
        const allAnswers = [];
        function includesQuestion(value) {
            for (let i = 0; i < allAnswers.length; i++) {
                if (allAnswers[i].questionId == value.questionId) {
                    return true;
                }                
            }
            return false;
        }
        function includesAnswer(answer) {
            for (let i = 0; i < allAnswers.length; i++) {
                if (allAnswers[i].answerId == answer) {
                    return true;
                }
            }
            return false;
        }
        function firstObj(answers, obj) {
            for (let i = 0; i < answers.length; i++) {                
                if (answers[i].questionId == obj.questionId) {
                    return answers[i];
                }
            }
            return null;
        }
        function saveAnswer(event) {
            var obj = {
                questionId: parseInt(event.target.name),
                answerId: parseInt(event.target.value)
            };
            console.log(obj);
            if (!includesQuestion(obj)) {
                allAnswers.push(obj);
            }
            else {
                if (includesQuestion(obj) && !includesAnswer(obj.answerId)) {
                    var found = firstObj(allAnswers, obj);
                    found.answerId = obj.answerId;
                }
            }
        }
        function show(e) {
            e.target.style.opacity = 1;
        }
        function sendAnswers(event) { 
            event.target.disabled = true;
            $.ajax({
                url: '/Subject/FinishExam?examId=' + @Model.Exam.Id,
                type: 'POST',
                data: {
                    body: JSON.stringify(allAnswers)
                },
                success: function (res) {
                    location.replace(res);
                }
            });
        }
        function hide(e) {
            e.target.style.opacity = 0.6;
        }
        function timer() {
            const hours = document.querySelector('#hours');
            const mins = document.querySelector('#mins');
            const secs = document.querySelector('#secs');
            let hour = 1;
            let min = 0;
            let sec = 0;                       
            const id = setInterval(function () {
                if (sec > 0) {
                    sec--;
                }
                else {
                    if (sec == 0 && hour == 0 && min == 0) {
                        clearInterval(id);
                        this.alert("Exam is Over");
                        location.replace('/Exam/SubjectsExams');
                    }
                    else {
                        sec = 59;
                        if (min > 0) {
                            min--;
                        }
                        else {
                            min = 59;
                            if (hour > 0) {
                                hour--;
                            }
                        }
                    }
                }
                hours.innerHTML = hour;
                mins.innerHTML = min;
                secs.innerHTML = sec; 
            }, 1000);
        }
        timer();
    </script>
}